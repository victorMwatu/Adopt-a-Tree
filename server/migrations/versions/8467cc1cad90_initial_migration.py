"""Initial migration

Revision ID: 8467cc1cad90
Revises: 
Create Date: 2025-10-29 15:37:09.519119

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8467cc1cad90'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('trees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('species_name', sa.String(length=100), nullable=False),
    sa.Column('scientific_name', sa.String(length=100), nullable=True),
    sa.Column('avg_co2_absorption', sa.Float(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('suitable_regions', sa.JSON(), nullable=True),
    sa.Column('sunlight_requirement', sa.String(length=50), nullable=True),
    sa.Column('water_needs', sa.String(length=50), nullable=True),
    sa.Column('drought_resistant', sa.Boolean(), nullable=True),
    sa.Column('growth_rate', sa.String(length=50), nullable=True),
    sa.Column('mature_height_meters', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('trees', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_trees_species_name'), ['species_name'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('region', sa.String(length=100), nullable=True),
    sa.Column('reset_token', sa.String(length=100), nullable=True),
    sa.Column('reset_token_expiry', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reset_token')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('user_trees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tree_id', sa.Integer(), nullable=False),
    sa.Column('date_adopted', sa.DateTime(), nullable=False),
    sa.Column('date_planted', sa.DateTime(), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('co2_offset', sa.Float(), nullable=True),
    sa.Column('growth_stage', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['tree_id'], ['trees.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_trees', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_trees_date_adopted'), ['date_adopted'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_trees_tree_id'), ['tree_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_trees_user_id'), ['user_id'], unique=False)

    op.create_table('ai_insights',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tree_id', sa.Integer(), nullable=True),
    sa.Column('user_tree_id', sa.Integer(), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('insight_type', sa.String(length=50), nullable=True),
    sa.Column('ai_model_used', sa.String(length=50), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['tree_id'], ['trees.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_tree_id'], ['user_trees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ai_insights', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ai_insights_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('ai_insights', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ai_insights_user_id'))

    op.drop_table('ai_insights')
    with op.batch_alter_table('user_trees', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_trees_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_trees_tree_id'))
        batch_op.drop_index(batch_op.f('ix_user_trees_date_adopted'))

    op.drop_table('user_trees')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('trees', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_trees_species_name'))

    op.drop_table('trees')
    # ### end Alembic commands ###
